import { NgZone, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export interface ResizeObserverBoxSize {
    blockSize: number;
    inlineSize: number;
}
export declare type ResizeObserverCallback = (resizes: ResizeObserverEntry[], observer: ResizeObserver) => void;
export interface ResizeObserverConfig {
    box?: 'content-box' | 'border-box';
}
export declare type ResizeObserverServiceCallback = (resize: ResizeObserverEntry) => void;
export declare class NgxResizeObserverService implements OnDestroy {
    private readonly ngZone;
    private count;
    private elementMap;
    private observer;
    constructor(ngZone: NgZone);
    ngOnDestroy(): void;
    observe(element: Element, callback: ResizeObserverServiceCallback, boxModel: string): void;
    unobserve(element: Element): void;
    private clearObserver;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxResizeObserverService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NgxResizeObserverService>;
}
